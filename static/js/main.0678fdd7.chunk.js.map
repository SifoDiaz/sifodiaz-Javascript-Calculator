{"version":3,"sources":["Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["isNumber","justClear","justResult","input","arrFormula","hasilDisp","Calculator","state","display","clickNumberInputs","value","setState","includes","length","concat","clickNumber","console","log","clickOperator","clickOperatorInputs","arrTemp","substring","clickClear","getResult","i","splice","operation","result","parseFloat","toString","id","this","onClick","className","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0678fdd7.chunk.js","sourcesContent":["import React from \"react\";\n\nvar justClear = true;\nvar justResult = false;\nvar isNumber;\nvar input = \"\";\nvar arrFormula = [];\nvar hasilDisp = \"0\";\n\nclass Calculator extends React.Component {\n  state = {\n    display: \"\"\n  };\n  clickNumberInputs = value => {\n    if (justClear === true) {\n      justClear = false;\n      isNumber = true;\n      hasilDisp = \"\";\n      this.setState(\n        {\n          display: \"\"\n        },\n        () => {\n          this.setState({\n            display: this.state.display + value\n          });\n          input = input + value;\n          hasilDisp = hasilDisp + value;\n        }\n      );\n    } else if (isNumber === true) {\n      if (input[0] === \"0\") {\n        if (input[1] == null) {\n          if (value === 0) {\n            value = \"\";\n          }\n        }\n      }\n      if (input.includes(\".\") === true && value === \".\") {\n        value = \"\";\n      }\n      input = input + value;\n      hasilDisp = hasilDisp + value;\n      this.setState({\n        display: this.state.display + value\n      });\n    } else {\n      isNumber = true;\n      if (input.length > 1) {\n        if (input[input.length - 1] === \"-\") {\n          input = input[input.length - 2];\n          arrFormula = arrFormula.concat(input);\n          input = \"-\" + value;\n          hasilDisp = \"-\" + value;\n          this.setState({\n            display: this.state.display + value\n          });\n        } else {\n          input = input[input.length - 1];\n          arrFormula = arrFormula.concat(input);\n          input = \"\" + value;\n          hasilDisp = \"-\" + value;\n          this.setState({\n            display: this.state.display + value\n          });\n        }\n      } else {\n        arrFormula = arrFormula.concat(input);\n        input = \"\" + value;\n        hasilDisp = \"\" + value;\n        this.setState({\n          display: this.state.display + value\n        });\n      }\n    }\n  };\n\n  clickNumber = value => {\n    console.log(justResult);\n    if (justResult === true) {\n      arrFormula = [];\n      hasilDisp = \"\";\n      justResult = false;\n      this.setState(\n        {\n          display: \"\"\n        },\n        () => {\n          this.clickNumberInputs(value);\n        }\n      );\n    } else {\n      this.clickNumberInputs(value);\n    }\n  };\n\n  clickOperator = value => {\n    if (justResult === true) {\n      this.setState(\n        {\n          display: hasilDisp\n        },\n        () => {\n          this.clickOperatorInputs(value);\n        }\n      );\n    } else {\n      this.clickOperatorInputs(value);\n    }\n  };\n\n  clickOperatorInputs = value => {\n    if (justResult === true) {\n      justResult = false;\n      this.setState({\n        display: hasilDisp\n      });\n    }\n    if (justClear === true) {\n      justClear = false;\n      isNumber = false;\n      hasilDisp = \"\";\n      this.setState(\n        {\n          display: \"\"\n        },\n        () => {\n          this.setState({\n            display: this.state.display + value\n          });\n          input = input + value;\n          hasilDisp = hasilDisp + value;\n        }\n      );\n    } else if (isNumber === true) {\n      isNumber = false;\n      arrFormula = arrFormula.concat(input);\n      input = \"\";\n      hasilDisp = \"\";\n      input = value;\n      hasilDisp = value;\n      this.setState({\n        display: this.state.display + value\n      });\n    } else {\n      if (input.includes(\"-\") === true && value === \"-\") {\n        value = \"\";\n      } else if (input.length > 0 && value !== \"-\") {\n        hasilDisp = \"\" + value;\n        var arrTemp = this.state.display;\n        var arrTemp = arrTemp.substring(\n          0,\n          arrTemp.length - 1 - (input.length - 1)\n        );\n        this.setState(\n          {\n            display: arrTemp\n          },\n          () => {\n            this.setState({\n              display: this.state.display + value\n            });\n          }\n        );\n        input = \"\" + value;\n      } else {\n        input = input + value;\n        hasilDisp = \"\" + value;\n        this.setState({\n          display: this.state.display + value\n        });\n      }\n    }\n    console.log(input);\n  };\n  clickClear = () => {\n    this.setState({\n      display: \"\"\n    });\n    justClear = true;\n    input = \"\";\n    hasilDisp = \"0\";\n    arrFormula = [];\n  };\n  getResult = () => {\n    arrFormula = arrFormula.concat(input);\n    for (let i = 0; i < arrFormula.length; i++) {\n      if (arrFormula[i] === \"\") {\n        arrFormula.splice(i, 1);\n        i--;\n      }\n    }\n    var result = 0;\n    var operation;\n    for (let i = 0; i < arrFormula.length; i++) {\n      if (i === 0) {\n        result = parseFloat(arrFormula[i]);\n      } else if (i % 2 === 0 && i !== 0) {\n        if (operation === \"+\") {\n          result = result + parseFloat(arrFormula[i]);\n        } else if (operation === \"-\") {\n          result = result - parseFloat(arrFormula[i]);\n        } else if (operation === \"*\") {\n          result = result * parseFloat(arrFormula[i]);\n        } else if (operation === \"/\") {\n          result = result / parseFloat(arrFormula[i]);\n        }\n      } else {\n        if (arrFormula[i] === \"+\") {\n          operation = \"+\";\n        } else if (arrFormula[i] === \"-\") {\n          operation = \"-\";\n        } else if (arrFormula[i] === \"*\") {\n          operation = \"*\";\n        } else if (arrFormula[i] === \"/\") {\n          operation = \"/\";\n        }\n      }\n    }\n    arrFormula = [result.toString()];\n    if (justResult === false) {\n      this.setState({\n        display: this.state.display + \"=\" + result.toString()\n      });\n    }\n    input = \"\";\n    hasilDisp = result;\n    justResult = true;\n  };\n\n  render() {\n    return (\n      <div id=\"calculator\">\n        <div id=\"display-container\">\n          <div id=\"formula\">{this.state.display}</div>\n          <div id=\"display\">{hasilDisp}</div>\n        </div>\n        <div id=\"button-container\">\n          <button id=\"clear\" onClick={this.clickClear}>\n            AC\n          </button>\n          <button\n            id=\"divide\"\n            className=\"operButton\"\n            onClick={() => this.clickOperator(\"/\")}\n          >\n            /\n          </button>\n          <button\n            id=\"multiply\"\n            className=\"operButton\"\n            onClick={() => this.clickOperator(\"*\")}\n          >\n            x\n          </button>\n          <button\n            id=\"seven\"\n            className=\"numButton\"\n            onClick={() => this.clickNumber(7)}\n          >\n            7\n          </button>\n          <button\n            id=\"eight\"\n            className=\"numButton\"\n            onClick={() => this.clickNumber(8)}\n          >\n            8\n          </button>\n          <button\n            id=\"nine\"\n            className=\"numButton\"\n            onClick={() => this.clickNumber(9)}\n          >\n            9\n          </button>\n          <button\n            id=\"subtract\"\n            className=\"operButton\"\n            onClick={() => this.clickOperator(\"-\")}\n          >\n            -\n          </button>\n          <button\n            id=\"four\"\n            className=\"numButton\"\n            onClick={() => this.clickNumber(4)}\n          >\n            4\n          </button>\n          <button\n            id=\"five\"\n            className=\"numButton\"\n            onClick={() => this.clickNumber(5)}\n          >\n            5\n          </button>\n          <button\n            id=\"six\"\n            className=\"numButton\"\n            onClick={() => this.clickNumber(6)}\n          >\n            6\n          </button>\n          <button\n            id=\"add\"\n            className=\"operButton\"\n            onClick={() => this.clickOperator(\"+\")}\n          >\n            +\n          </button>\n          <button\n            id=\"one\"\n            className=\"numButton\"\n            onClick={() => this.clickNumber(1)}\n          >\n            1\n          </button>\n          <button\n            id=\"two\"\n            className=\"numButton\"\n            onClick={() => this.clickNumber(2)}\n          >\n            2\n          </button>\n          <button\n            id=\"three\"\n            className=\"numButton\"\n            onClick={() => this.clickNumber(3)}\n          >\n            3\n          </button>\n          <button\n            id=\"zero\"\n            className=\"numButton\"\n            onClick={() => this.clickNumber(0)}\n          >\n            0\n          </button>\n          <button\n            id=\"decimal\"\n            className=\"numButton\"\n            onClick={() => this.clickNumber(\".\")}\n          >\n            .\n          </button>\n          <button id=\"equals\" onClick={this.getResult}>\n            =\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./Calculator\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Calculator />\n        <div id=\"information\">\n          <p>Javascript Calculator</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}